name: Zoe
patterns:
    - include: '#comments'
    - include: '#constants'
    - include: '#keywords'
    - include: '#strings'
    - include: '#type'
    - include: '#function'
repository:
    keywords:
        patterns:
            -
                name: keyword.control.zoe
                match: \b(closure|import|trait|implement(s)|where|try|export|from|as|return|yield|match|with|if|in|else|and|or|for|implement|return|function|own(ed)?|shared|borrow(s)?|readonly|take|give|struct|type|enum|let|const|async|await|lock)\b
    constants:
        name: constant.zoe
        match: \b(null|this|true|false|(\d+|(\d+)?\.\d+)((i|f)(32|64))?)\b

    comments:
        patterns:
            -
                begin: '#\(\('
                end: '#\)'
                name: comment.block.documentation.zoe
                patterns:
                    - include: source.md
            -
                begin: '#\('
                end: '#\)'
                name: comment.block.zoe
                patterns:
                    - include: '#comments'
            -
                match: '#[^\n]*'
                name: comment.line.double-slash.zoe

    function:
        match: \b(\w+)(?=\()
        name: entity.name.function.zoe

    type:
        name: entity.name.type.zoe
        match: \b[A-Z]\w*(\[\])*\??

    strings:
      patterns:
        -
          name: string.quoted.double.zoe
          begin: '"'
          end: '"'
          patterns:
              -
                  name: constant.character.escape.zoe
                  match: \\.
        -
          name: string.quoted.single.zoe
          begin: "'"
          end: "'"
          patterns:
              -
                  name: constant.character.escape.zoe
                  match: \\.
        -
          name: string.quoted.template.zoe
          begin: '`'
          end: '`'
          patterns:
              -
                  name: constant.character.escape.zoe
                  match: \\.
scopeName: source.zoe
